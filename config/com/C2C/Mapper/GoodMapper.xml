<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.C2C.Mapper.GoodMapper">

  <select id="getGoodByIdGoods" resultMap="goodAndMessage">
  	SELECT idGoods,category,sellMen,goodName,price,goodIntroduce,goodPhoto FROM c2cdemo.goods WHERE idGoods = #{idGoods} AND state = 0
  </select>
  
  <resultMap type="com.C2C.Entity.Good" id="goodAndMessage" autoMapping="true">
  	<result property="idGoods" column="idGoods"/>
  	<association property="sellMen" javaType="com.C2C.Entity.User" select="com.C2C.Mapper.UserMapper.getUserInfo" column="sellMen"></association>
  </resultMap>

  <!-- List<Good> getGoodsByPositionAndPage(@Param("positionName")String positionName, @Param("range")String range, @Param("category")String category, @Param("page")int page); -->  
  <select id="getGoodsByPositionAndPage" resultMap="getSellMen">
  	SELECT 
	goods.idGoods,
	goods.category,
	goods.goodPhoto,
	goods.goodName,
	goods.price,
	goods.sellMen
	FROM goods,user
	WHERE user.position = (
		SELECT idposition FROM position WHERE position.positionName LIKE #{positionName} AND position.range LIKE #{range} LIMIT 0,1
	) 
	AND goods.state = 0
	AND goods.sellMen = user.idUser
	<if test="category!=null">
	AND goods.category = #{category }
	</if>
	ORDER BY idGoods
	LIMIT #{star},#{size}
  </select>
  
  <resultMap type="com.C2C.Entity.Good" id="getSellMen" autoMapping="true">
  	<association property="sellMen" javaType="com.C2C.Entity.User" select="com.C2C.Mapper.UserMapper.getUserInfo" column="sellMen"></association>
  </resultMap>
  
  <!-- int issueGood(@Param("sellMen")int sellMen, @Param("good")Good good); -->
  <insert id="issueGood">
  	INSERT INTO `c2cdemo`.`goods` 
  	(`category`, `sellMen`, `goodName`, `price`, `goodIntroduce`, `issueDate`) 
  	VALUES 
  	(#{good.category}, #{sellMen}, #{good.goodName}, #{good.price}, #{good.goodIntroduce}, #{good.issueDate})
  </insert>
  
  <!-- int getGoodCount(@Param("positionName")String positionName, @Param("range")String range, @Param("category")String category); -->
  <select id="getGoodCount" resultType="int">
  	SELECT count(idGoods) FROM c2cdemo.goods where sellMen in(
		select idUser FROM user where position in(
			select idPosition FRom position where positionName LIKE #{positionName} AND position.range LIKE #{range}
		)
	) 
	<if test="category!=null">
		and category = #{category}
	</if>
  </select>
  
  
</mapper>